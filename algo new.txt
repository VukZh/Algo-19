
1 - начинаем от нач. точки и ищем узел наиболее приближенный с прямой,
	соединяющей нач. и конечные точки узел ищем на определенном
	расстоянии от предыдущей точки, чтобы было не слишком близко
	от нее (думаю это 50-200км)
2 - повторяем этот шаг и смотрим как изменяется отклонение каждого шага
	от воображаемой прямой между началом и концом,
   		- если появилось увеличивающиеся отклонение от нее, продолжаем с пункта 1
   		- если увеличенное отклонение начинаем уменьшатся (насколько - 
	думаю порядка 10-30 км), сохраняем предыдущую точку (точка N) где
	это отклонение от прямой было больше чем на этом шаге и создаем
	новую воображаемую прямую между этой точкой и концом, продолжаем
	с пункта 1. Можно одновременно, если пересчет воображаемой прямой был
	(определена точка N), делаем оптимизацию ища кратчайший путь между
	точкой N и предыдущей точкой N (если она была посчитана) или начальной
	точкой (если ее небыло - т.е. это первый пересчет воображаемой прямой,
	оно же - первое определение точки N).
повторяем оба шага пока не достигнем конечной точки.
(пример в динамике - sample find path.gif).

   Для оптимизации можно:
1 - идти с обеих концов навстречу, поиск делать пока точки поиска или
не встрятяться, или не будет сделан пересчет воображаемой прямой.
2 - Если произойдет пересчет, ту сторону поиска где вершину для такой
прямой обновили, приостанавливаем и продолжаем искать с другой стороны.
Идем пока маршруты не дойдут друг до друга или не будет пересчета
воображаемой прямой уже с другой стороны (где мы сейчас ищем).
В этом случаем генерируем новую прямую между предпоследними вершинами
поиска и переходим к п.1 
(пример sample path 2.png).
